---
- name: push packages
  copy: src=../file/redis-3.0.4.tar.gz dest=/opt owner=root group=root
- name: tar package
  shell: tar xf /opt/redis-3.0.4.tar.gz -C /opt && mv /opt/redis-3.0.4 /opt/redis
- name: useradd redis zabbix #如果有用户就不添加
  shell: useradd redis #&& useradd zabbix
#  when: result|failed
#- name: install make gcc
#  apt: name={{ item }} state=present
#  with_items:
#  - build-essential
#  - make
#  - gcc
#  - acl
- name: install redis
  shell: cd /opt/redis/ &&  make
- name: Create redis Datadir
  file: path={{ item }} state=directory
  with_items:
  - "{{ redis_log_dir }}"
  - "{{ redis_data_dir }}/{{ redis_master_port }}"
  - "{{ redis_back_dir }}/{{ redis_slave_port }}"
  - "{{ redis_config_dir }}"
- name: change Privilege
  shell: path=/opt/redis/src/{{ item }} owner=root group=root mode=754
  with_items:
  - "redis-server"
  - "redis-cli"
- name: redis privileges acl
  acl: name=/opt/redis/src/{{ item }} entity=zabbix etype=user permissions="rwx" state=present
  with_items:
  - "redis-server"
  - "redis-cli"
- name: links redis-*
  file: src=/opt/redis/src/{{ item }} dest=/usr/local/bin/{{ item }} state=link
  with_items:
  - "redis-server"
  - "redis-cli"
  - "redis-check-aof"
  - "redis-check-dump"
  register: result
  ignore_errors: True
- name: copy master config
  template: src=redismaster.conf.j2 dest=/etc/redis/redis.cnf
#  when: "hosts == 'mongo_master'"
  when: ansible_all_ipv4_addresses[0] == "192.168.7.80"
  notify: 
  - start redis-server
  - del redis.tgz  
- name: copy slave config
  template: src=redisslave.conf.j2 dest=/etc/redis/redis.cnf
  when: ansible_all_ipv4_addresses[0] == "192.168.7.96"
#  when: "hosts == 'mongo_slaver'" #and ansible_all_ipv4_addresses == "192.168.7.96"
  notify: 
   - start redis-server
   - del redis.tgz
